version: '3'

volumes:
  postgres-data:
  redis-data:

services:
  loadbalancer:
    image: nginx
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/sites.template.${SITES_TEMPLATE:-docker}:/etc/nginx/sites-available/sites.template
      - ./nginx/default/html:/var/www/html
      - ./log/nginx:/var/log/nginx
      - ./log/certbot:/var/log/letsencrypt
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      - URL_HOST=sl.${URL_HOST}
    depends_on:
      - scalelite1-nginx
      - scalelite2-nginx
    command: /bin/bash -c "envsubst '$$URL_HOST' < /etc/nginx/sites-available/sites.template > /etc/nginx/sites-enabled/sites.conf && exec nginx -g 'daemon off;'"
    logging:
      driver: journald

  postgres:
    image: postgres:11.5-alpine
    container_name: postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}

  redis:
    image: redis:5.0-alpine
    command: ["redis-server", "--appendonly", "yes"]
    container_name: redis
    restart: on-failure
    volumes:
      - redis-data:/data

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./log/certbot:/var/log/letsencrypt
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  scalelite1-nginx:
    image: ${SCALELITE_REPO:-blindsidenetwks}/scalelite:${SCALELITE_TAG:-v1}-nginx
    container_name: scalelite1-nginx
    restart: unless-stopped
    volumes:
      - ./log/scalelite1-nginx/:/var/log/nginx
      - ./data/certbot/conf:/etc/nginx/ssl
      - ./data/certbot/www:/var/www/certbot
      - ./data/nginx/scalelite:/etc/nginx/conf.d/scalelite
      - ${SCALELITE_RECORDING_DIR-/mnt/scalelite-recordings/var/bigbluebutton}/published:/var/bigbluebutton/published
    environment:
      - URL_HOST=sl1.${URL_HOST}
      - BEHIND_PROXY=true
      - SCALELITE_API=scalelite1-api
    depends_on:
      - scalelite1-api
    logging:
      driver: journald

  scalelite1-api:
    image: ${SCALELITE_REPO:-blindsidenetwks}/scalelite:${SCALELITE_TAG:-v1}-api
    container_name: scalelite1-api
    restart: unless-stopped
    volumes:
      - ./log/scalelite/:/app/log
      - ${SCALELITE_RECORDING_DIR-/mnt/scalelite-recordings/var/bigbluebutton}:/var/bigbluebutton
    environment:
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - LOADBALANCER_SECRET=${LOADBALANCER_SECRET}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:password@postgres:5432/scalelite?pool=5}
      - WEB_CONCURRENCY=${WEB_CONCURRENCY}
    depends_on:
      - postgres
      - redis
    logging:
      driver: journald

  scalelite2-nginx:
    image: ${SCALELITE_REPO:-blindsidenetwks}/scalelite:${SCALELITE_TAG:-v1}-nginx
    container_name: scalelite2-nginx
    restart: unless-stopped
    volumes:
      - ./log/scalelite2-nginx/:/var/log/nginx
      - ./data/certbot/conf:/etc/nginx/ssl
      - ./data/certbot/www:/var/www/certbot
      - ./data/nginx/scalelite:/etc/nginx/conf.d/scalelite
      - ${SCALELITE_RECORDING_DIR-/mnt/scalelite-recordings/var/bigbluebutton}/published:/var/bigbluebutton/published
    environment:
      - URL_HOST=sl2.${URL_HOST}
      - BEHIND_PROXY=true
      - SCALELITE_API=scalelite2-api
    depends_on:
      - scalelite2-api
    logging:
      driver: journald

  scalelite2-api:
    image: ${SCALELITE_REPO:-blindsidenetwks}/scalelite:${SCALELITE_TAG:-v1}-api
    container_name: scalelite2-api
    restart: unless-stopped
    volumes:
      - ./log/scalelite/:/app/log
      - ${SCALELITE_RECORDING_DIR-/mnt/scalelite-recordings/var/bigbluebutton}:/var/bigbluebutton
    environment:
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - LOADBALANCER_SECRET=${LOADBALANCER_SECRET}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:password@postgres:5432/scalelite?pool=5}
      - WEB_CONCURRENCY=${WEB_CONCURRENCY}
    depends_on:
      - postgres
      - redis
    logging:
      driver: journald

  scalelite-poller:
    image: ${SCALELITE_REPO:-blindsidenetwks}/scalelite:${SCALELITE_TAG:-v1}-poller
    container_name: scalelite-poller
    restart: unless-stopped
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:password@postgres:5432/scalelite?pool=5}
    depends_on:
      - postgres
      - redis
    logging:
      driver: journald

  scalelite-recording-importer:
    image: ${SCALELITE_REPO:-blindsidenetwks}/scalelite:${SCALELITE_TAG:-v1}-recording-importer
    container_name: scalelite-recording-importer
    restart: unless-stopped
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:password@postgres:5432/scalelite?pool=5}
    volumes:
      - ${SCALELITE_RECORDING_DIR-/mnt/scalelite-recordings/var/bigbluebutton}:/var/bigbluebutton
      - ${SCALELITE_RECORDING_DIR-/mnt/scalelite-recordings/var/bigbluebutton}/spool:/var/bigbluebutton/spool
    depends_on:
      - postgres
      - redis
    logging:
      driver: journald
