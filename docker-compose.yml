version: '3'

volumes:
  postgres-data:
  redis-data:

services:
  postgres:
    image: postgres:11-alpine
    container_name: postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}

  redis:
    image: redis:5.0-alpine
    command: ["redis-server", "--appendonly", "yes"]
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
      - ./data/redis/conf/redis.conf.template:/usr/local/etc/redis/redis.conf.template
      - ./data/certbot/conf/:/etc/letsencrypt
    command: /bin/sh -c "sed -e 's/$$HOSTNAME/${REDIS_HOST:-redis}.${DOMAIN_NAME:-user.blindside-ps.dev}/' /usr/local/etc/redis/redis.conf.template > /usr/local/etc/redis/redis.conf && exec redis-server --appendonly yes"
    
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./log/certbot:/var/log/letsencrypt
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  # scalelite-nginx:
  #   image: ${SCALELITE_REPO:-blindsidenetwks}/scalelite:${SCALELITE_TAG:-v1.1}-nginx
  #   container_name: scalelite-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./log/nginx/:/var/log/nginx
  #     - ./data/certbot/conf:/etc/nginx/ssl
  #     - ./data/certbot/www:/var/www/certbot
  #     - ./data/nginx/scalelite:/etc/nginx/conf.d/scalelite
  #     - ${SCALELITE_RECORDING_DIR-/mnt/scalelite-recordings/var/bigbluebutton}/published:/var/bigbluebutton/published
  #   environment:
  #     - NGINX_SSL=${NGINX_SSL-true}
  #     - URL_HOST=${URL_HOST}
  #   depends_on:
  #     - scalelite-api
  scalelite-proxy:
    image: ${NGINX_DOCKER_IMAGE:-nginx:1.24}
    container_name: scalelite-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOSTNAME=${SL_HOST:-sl.xlab.blindside-ps.dev}
    volumes:
      - ./log/proxy-nginx/:/var/log/nginx
      - ./data/proxy/nginx/sites.template.${DOCKER_PROXY_NGINX_TEMPLATE:-scalelite-proxy}:/etc/nginx/sites.template
      - ./data/proxy/nginx/sites-common:/etc/nginx/sites-common
      - ./data/certbot/conf/:/etc/letsencrypt
      - ./data/certbot/www/:/var/www/certbot
    depends_on:
      - certbot
      - scalelite-api
      - scalelite-recordings
    command: /bin/bash -c "envsubst '$$NGINX_HOSTNAME' < /etc/nginx/sites.template > /etc/nginx/conf.d/default.conf && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"

  scalelite-recordings:
    image: ${SCALELITE_RECORDINGS_DOCKER_IMAGE:-bigbluebutton/bbb-playback-proxy:focal-260-alpine}
    container_name: scalelite-recordings
    restart: unless-stopped
    volumes:
      - ./log/recordings/:/var/log/nginx
      - ${SCALELITE_RECORDING_DIR:-/mnt/scalelite-recordings/var/bigbluebutton}/published:/var/bigbluebutton/published
    depends_on:
      - scalelite-api

  scalelite-api:
    image: ${SCALELITE_REPO:-blindsidenetwks}/scalelite:${SCALELITE_TAG:-v1.1}-api
    container_name: scalelite-api
    restart: unless-stopped
    volumes:
      - ./log/scalelite/:/app/log
      - ${SCALELITE_RECORDING_DIR-/mnt/scalelite-recordings/var/bigbluebutton}:/var/bigbluebutton
    environment:
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - LOADBALANCER_SECRET=${LOADBALANCER_SECRET}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:password@postgres:5432/scalelite?pool=5}
      - URL_HOST=${URL_HOST}
    depends_on:
      - postgres
      - redis
    logging:
      driver: journald

  scalelite-poller:
    image: ${SCALELITE_REPO:-blindsidenetwks}/scalelite:${SCALELITE_TAG:-v1.1}-poller
    container_name: scalelite-poller
    restart: unless-stopped
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:password@postgres:5432/scalelite?pool=5}
    depends_on:
      - postgres
      - redis
      - scalelite-api
    logging:
      driver: journald

  scalelite-recording-importer:
    image: ${SCALELITE_REPO:-blindsidenetwks}/scalelite:${SCALELITE_TAG:-v1.1}-recording-importer
    container_name: scalelite-recording-importer
    restart: unless-stopped
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:password@postgres:5432/scalelite?pool=5}
    volumes:
      - ${SCALELITE_RECORDING_DIR-/mnt/scalelite-recordings/var/bigbluebutton}:/var/bigbluebutton
      - ${SCALELITE_RECORDING_DIR-/mnt/scalelite-recordings/var/bigbluebutton}/spool:/var/bigbluebutton/spool
    depends_on:
      - postgres
      - redis
      - scalelite-api
    logging:
      driver: journald
